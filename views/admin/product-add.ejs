<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">

    <link rel="stylesheet" href="/productadd.css">
</head>
<%- include('../partials/admin/leyout.ejs') %>

<style>
    .error-message {
        color: red;
    }


    .thumbnails-container {
        display: flex;
        overflow-x: auto;
    }


    .thumbnail {
        margin-right: 10px;


    }
</style>

<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Add New Product</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/addproducts" enctype="multipart/form-data"
                        onsubmit="return validateForm()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" placeholder="Type here" name="productName" class="form-control border"
                                id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <textarea placeholder="Type here" id="descriptionid" name="description"
                                class="form-control border" rows="4"></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <input placeholder="$" name="regularPrice" type="text" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input placeholder="$" name="salePrice" type="text" class="form-control border">

                                </div>
                                <div id="salePrice-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity</label>
                                    <input placeholder="" name="quantity" type="text" class="form-control border">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            <% for(let i=0; i < cat.length; i++) { %>
                                                <option value="<%= cat[i].name %>">
                                                    <%= cat[i].name %>
                                                </option>
                                                <% } %>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Brands</label>
                                        <select class="form-select border" style="width: 150px;" name="brand">
                                            <% for(let i=0; i < brands.length; i++) { %>
                                                <option value="<%= brands[i].brandName %>">
                                                    <%= brands[i].brandName %>
                                                </option>
                                                <% } %>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose Images</h4>
                            </div>
                            <div class="border row">
                                <div id="addedImagesContainer" class="thumbnails-container"></div>
                            </div>
                            
                            <!-- Image 1 Upload and Cropping -->
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <label for="input1" class="form-label">Upload Image 1</label>
                                    <input class="form-control" type="file" name="images" id="input1" accept="image/png, image/jpeg, image/jpg"
                                        onchange="viewImage(event, 1)">
                                    <img src=""  id="imgView1" style="max-width: 100%; margin-top: 10px;">
                                    <div id="croppedPreview1" style="margin-top: 10px;">
                                        <h6>Cropped Preview:</h6>
                                        <img src="" id="croppedImg1" alt="Cropped" style="max-width: 100%;">
                                    </div>
                                    <button type="button" id="saveButton1" class="btn-sm btn-primary" style="margin-top: 10px;">Save Cropped</button>
                                </div>
                            </div>
                        
                            <!-- Repeat similar structure for Image 2 -->
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <label for="input2" class="form-label">Upload Image 2</label>
                                    <input class="form-control" type="file" name="images" id="input2" accept="image/png, image/jpeg, image/jpg"
                                        onchange="viewImage(event, 2)">
                                    <img src="" alt="Original" id="imgView2" style="max-width: 100%; margin-top: 10px;">
                                    <div id="croppedPreview2" style="margin-top: 10px;">
                                        <h6>Cropped Preview:</h6>
                                        <img src="" id="croppedImg2" alt="Cropped" style="max-width: 100%;">
                                    </div>
                                    <button type="button" id="saveButton2" class="btn-sm btn-primary" style="margin-top: 10px;">Save Cropped</button>
                                </div>
                            </div>
                        
                            <!-- Repeat similar structure for Image 3 -->
                            <div class="row">
                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                    <label for="input3" class="form-label">Upload Image 3</label>
                                    <input class="form-control" type="file" name="images" id="input3" accept="image/png, image/jpeg, image/jpg"
                                        onchange="viewImage(event, 3)">
                                    <img src="" alt="Original" id="imgView3" style="max-width: 100%; margin-top: 10px;">
                                    <div id="croppedPreview3" style="margin-top: 10px;">
                                        <h6>Cropped Preview:</h6>
                                        <img src="" id="croppedImg3" alt="Cropped" style="max-width: 100%;">
                                    </div>
                                    <button type="button" id="saveButton3" class="btn-sm btn-primary" style="margin-top: 10px;">Save Cropped</button>
                                </div>
                            </div>
                        </div>
                        
                </div>
                <div>
                    <button class="btn btn-md rounded font-sm hover-up" type="button"
                        onclick="validateAndSubmit()">Publish</button>
                </div>
                </form>
            </div>
        </div>
    </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script>
    function validateAndSubmit() {

        if (true) {
            document.forms[0].submit();
        }

    }
    function validateForm() {
        let imageDatas = false
        console.log("validate form");
        clearErrorMessages();
        const name = document.getElementsByName('productName')[0].value;
        const description = document.getElementsByName('descriptionData')[0].value;
        const brand = document.getElementsByName('brand')[0].value;
        const price = document.getElementsByName('regularPrice')[0].value;
        const saleprice = document.getElementsByName('salePrice')[0].value;
        const color = document.getElementsByName('color')[0].value;
        const category = document.getElementsByName('category')[0].value;
        const images = document.getElementById('input1')
        const quantity = document.getElementsByName('quantity')
        imageDatas = document.getElementById("imageDatas")?.value;
        let isValid = true;
        if (name.trim() === "") {
            displayErrorMessage('productName-error', 'Please enter a product name.');
            isValid = false;
        }

        if (description === '') {
            displayErrorMessage('description-error', 'Please enter a product description.');
            isValid = false;
        }


        if (parseInt(quantity) < 0) {
            displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
            isValid = false;
        }
        if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
            displayErrorMessagEe('regularPrice-error', 'Please enter a valid non-negative price.');
            isValid = false;
        }
        if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
            displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
            isValid = false;
        }
        if (!imageDatas && images.files.length === 0) {
            displayErrorMessage("images-error", 'Please select an image.');
            isValid = false;
        }
        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }


    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName('error-message');
        Array.from(errorElements).forEach(element => {
            element.innerText = '';
        });
        const errorMessage = document.getElementById('errorMessage');
    }
    function viewImage1(event) {
        document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
    }


    function viewImage2(event) {
        document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
    }


    function viewImage3(event) {
        document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
    }

    function viewImage(event, index) {
    const fileInput = event.target;
    const image = document.getElementById(`imgView${index}`);
    const croppedImage = document.getElementById(`croppedImg${index}`);
    const saveButton = document.getElementById(`saveButton${index}`);
    const previewContainer = document.getElementById(`croppedPreview${index}`);

    // Create an object URL for the uploaded image
    const imageUrl = URL.createObjectURL(fileInput.files[0]);
    image.src = imageUrl;

    const cropper = new Cropper(image, {
        aspectRatio: 1,
        viewMode: 1,
        guides: true,
        background: false,
        autoCropArea: 1,
        zoomable: true,
    });

    saveButton.style.display = 'block';
    saveButton.addEventListener('click', () => {
        const croppedCanvas = cropper.getCroppedCanvas();
        const croppedImageUrl = croppedCanvas.toDataURL('image/jpeg', 1.0);
        croppedImage.src = croppedImageUrl;

        croppedCanvas.toBlob((blob) => {
            const newFile = new File([blob], `cropped-${Date.now()}.jpg`, { type: 'image/jpeg' });
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(newFile);
            fileInput.files = dataTransfer.files;

            cropper.destroy();
        });

        previewContainer.style.display = 'block';
    });
}

    const selectedImages = [];
    document.getElementById("imageInput").addEventListener("change", handleFileSelect);


    function handleFileSelect(event) {
        const addedImagesContainer = document.getElementById("addedImagesContainer");
        addedImagesContainer.innerHTML = "";
        const files = event.target.files;
        for (let i = 0; i < files.length; i++) {
            const file = files[i];
            selectedImages.push(file);
            const thumbnail = document.createElement("div");
            thumbnail.classList.add("thumbnail");
            const img = document.createElement("img");
            img.src = URL.createObjectURL(file);
            img.alt = "thumbnail";
            img.style.width = "50px";
            img.style.height = "auto";
            const removeIcon = document.createElement("span");
            removeIcon.classList.add("remove-icon");
            removeIcon.innerHTML = "&times;";
            removeIcon.addEventListener("click", function () {
                const index = selectedImages.indexOf(file);
                if (index !== -1) {
                    selectedImages.splice(index, 1);
                }
                thumbnail.remove();
            });
            thumbnail.appendChild(img);
            thumbnail.appendChild(removeIcon);
            addedImagesContainer.appendChild(thumbnail);
        }
    };

</script>