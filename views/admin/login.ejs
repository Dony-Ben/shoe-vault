<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Login</title>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Arial, sans-serif;
      background: #f3f4f6;
    }
    *, *:before, *:after {
      box-sizing: inherit;
    }
    .admin-login-container {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      background: #f3f4f6;
      padding: 16px;
    }
    .admin-login-box {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 2px 16px rgba(0,0,0,0.08);
      padding: 40px 36px;
      width: 100%;
      max-width: 480px;
      min-width: 0;
      display: flex;
      flex-direction: column;
      gap: 8px;
    }
    .admin-login-box h2 {
      text-align: center;
      margin-bottom: 24px;
      font-size: 1.7rem;
      font-weight: 700;
    }
    .admin-login-box input[type='email'],
    .admin-login-box input[type='password'] {
      width: 100%;
      padding: 14px 14px;
      margin-bottom: 8px;
      border-radius: 6px;
      border: 1px solid #ccc;
      font-size: 1rem;
      transition: border 0.2s, box-shadow 0.2s;
    }
    .admin-login-box button {
      width: 100%;
      padding: 14px 0;
      background: #111;
      color: #fff;
      border: none;
      border-radius: 6px;
      font-size: 1.1rem;
      font-weight: 600;
      cursor: pointer;
      transition: background 0.2s;
      margin-top: 8px;
    }
    .admin-login-box button:hover {
      background: #333;
    }
    .error-message {
      color: #d32f2f;
      font-size: 0.95rem;
      min-height: 20px;
      margin-bottom: 4px;
    }
    .input-error {
      border-color: #d32f2f !important;
      box-shadow: 0 0 0 2px rgba(211, 47, 47, 0.2) !important;
    }
    .input-success {
      border-color: #2e7d32 !important;
      box-shadow: 0 0 0 2px rgba(46, 125, 50, 0.2) !important;
    }
    @media (max-width: 600px) {
      .admin-login-box {
        padding: 18px 4vw;
        max-width: 98vw;
      }
      .admin-login-box h2 {
        font-size: 1.2rem;
      }
      .admin-login-box input[type='email'],
      .admin-login-box input[type='password'] {
        font-size: 0.98rem;
        padding: 12px 8px;
      }
      .admin-login-box button {
        font-size: 1rem;
        padding: 12px 0;
      }
    }
    @media (max-width: 400px) {
      .admin-login-box {
        padding: 10px 2vw;
      }
      .admin-login-box h2 {
        font-size: 1rem;
      }
    }
    
  </style>
</head>
<body>
    <div class="admin-login-container">
        <form class="admin-login-box" id="adminLoginForm" method="POST" action="/admin/login" novalidate>
            <h2>Admin Login</h2>
            <% if (typeof error !== 'undefined' && error) { %>
              <div class="error-message" style="text-align:center;"><%= error %></div>
            <% } %>
            <input type="email" id="email" name="email" placeholder="Email Address" autocomplete="username"  aria-describedby="emailError">
            <div class="error-message" id="emailError"></div>
            <input type="password" id="password" name="password" placeholder="Password" autocomplete="current-password"  aria-describedby="passwordError">
            <div class="error-message" id="passwordError"></div>
            <button type="submit" id="submitBtn">
                <span id="btnText">Login</span>
                <span id="spinner" style="display:none;">Loading...</span>
            </button>
        </form>
    </div>

    <script>
  // Form validation and submission
  const form = document.getElementById('adminLoginForm');
  const emailInput = document.getElementById('email');
  const passwordInput = document.getElementById('password');
  const submitBtn = document.getElementById('submitBtn');
  const btnText = document.getElementById('btnText');
  const spinner = document.getElementById('spinner');

  // Email validation
  function validateEmail(email) {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  }

  // Password validation
  function validatePassword(password) {
    return password.length >= 6;
  }

  // Show error styling
  function showError(input, message) {
    input.classList.remove('input-success');
    input.classList.add('input-error');
    const errorElement = document.getElementById(input.id + 'Error');
    if (errorElement) {
      errorElement.style.display = 'block'; // Ensure visible
      errorElement.textContent = message;
    }
  }

  // Clear error styling
  function clearError(input) {
    input.classList.remove('input-error');
    input.classList.add('input-success');
    const errorElement = document.getElementById(input.id + 'Error');
    if (errorElement) {
      errorElement.textContent = '';
      errorElement.style.display = 'block'; // Keep space for error
    }
  }

  // Real-time validation
  emailInput.addEventListener('input', function() {
    const email = this.value.trim();
    if (email === '') {
      this.classList.remove('input-error', 'input-success');
      document.getElementById('emailError').textContent = '';
    } else if (!validateEmail(email)) {
      showError(this, 'Please enter a valid email address');
    } else {
      clearError(this);
    }
  });

  passwordInput.addEventListener('input', function() {
    const password = this.value;
    if (password === '') {
      this.classList.remove('input-error', 'input-success');
      document.getElementById('passwordError').textContent = '';
    } else if (!validatePassword(password)) {
      showError(this, 'Password must be at least 6 characters long');
    } else {
      clearError(this);
    }
  });

  // Form submission
  form.addEventListener('submit', function(e) {
    e.preventDefault();

    let hasError = false;
    const email = emailInput.value.trim();
    const password = passwordInput.value;

    // Validate email
    if (!email) {
      showError(emailInput, 'Email is required');
      hasError = true;
    } else if (!validateEmail(email)) {
      showError(emailInput, 'Please enter a valid email address');
      hasError = true;
    } else {
      clearError(emailInput);
    }

    // Validate password
    if (!password) {
      showError(passwordInput, 'Password is required');
      hasError = true;
    } else if (!validatePassword(password)) {
      showError(passwordInput, 'Password must be at least 6 characters long');
      hasError = true;
    } else {
      clearError(passwordInput);
    }

    if (hasError) {
      btnText.style.display = 'block';
      spinner.style.display = 'none';
      submitBtn.disabled = false;
      return; // Do not submit if there are errors
    }
    submitBtn.disabled = true;

    // Show loading state
    btnText.style.display = 'none';
    spinner.style.display = 'block';

    // Submit form after short delay for UX
    setTimeout(() => {
      form.submit();
    }, 500);
  });

  // Auto-focus email input on page load
  window.addEventListener('load', function() {
    emailInput.focus();
  });

  // Show success message if redirected from successful login
  if (window.location.search.includes('success=true')) {
    Swal.fire({
      title: 'Welcome!',
      text: 'Login successful',
      icon: 'success',
      timer: 2000,
      showConfirmButton: false,
      toast: true,
      position: 'top-end'
    });
  }
</script>
</body>
</html>
