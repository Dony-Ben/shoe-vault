<nav class="bg-transparent p-4 fixed w-full z-10 transition-all duration-300 ease-in-out" id="navbar">
    <div class="container mx-auto flex justify-between items-center">
        <a href="/home" class="text-2xl font-serif font-bold text-black">Shoe Vault </a>
        <!-- Hamburger for mobile -->
        <button id="mobileMenuButton" class="md:hidden flex flex-col justify-center items-center w-10 h-10 focus:outline-none" aria-label="Toggle navigation">
            <span class="block w-6 h-0.5 bg-black mb-1"></span>
            <span class="block w-6 h-0.5 bg-black mb-1"></span>
            <span class="block w-6 h-0.5 bg-black"></span>
        </button>
        <!-- Nav links -->
        <ul id="navLinks" class="hidden md:flex space-x-6 absolute md:static top-16 left-0 w-full md:w-auto bg-white md:bg-transparent shadow-md md:shadow-none md:top-auto md:left-auto flex-col md:flex-row z-20 md:z-auto">
            <li><a href="/home" class="block px-4 py-2 md:p-0 text-black hover:text-accent transition duration-300">HOME</a></li>
            <li><a href="/shop" class="block px-4 py-2 md:p-0 text-black hover:text-accent transition duration-300">SHOP</a></li>
            <li><a href="/about" class="block px-4 py-2 md:p-0 text-black hover:text-accent transition duration-300">ABOUT US</a></li>
        </ul>
        <div class="flex items-center space-x-4 md:space-x-6">
            <a href="/wishlist"
                class="text-black hover:text-accent transition duration-300 flex items-center space-x-1">
                <img src="/image/whishlist.svg" alt="Wishlist" class="w-6 h-6">
            </a>
            <a href="/cart" class="text-black hover:text-accent transition duration-300 flex items-center space-x-1">
                <img src="/image/cart-icon.svg" alt="Cart" class="w-6 h-6">
            </a>
            <div class="relative">
                <button class="text-light hover:text-accent focus:outline-none flex items-center space-x-2"
                    id="profileButton">
                    <img src="/image/profile.jpg" alt="Profile" class="w-8 h-8 rounded-full">
               </button>
                <!-- Dropdown -->
                <div id="profileDropdown" class="hidden absolute right-0 mt-2 w-48 bg-white shadow-lg rounded-lg">
                    <a href="/profile" class="block px-4 py-2 text-gray-700 hover:bg-gray-200 transition">My Profile</a>
                    <!-- <a href="/settings" class="block px-4 py-2 text-gray-700 hover:bg-gray-200 transition">Settings</a> -->
                    <hr class="my-1">
                    <div class="flex justify-center">
                        <button id="logoutButton" class="block px-4 py-2 text-gray-700 hover:bg-gray-200 transition"
                            style="color: red;">
                            Logout
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</nav>

<script>
    let lastScrollY = window.scrollY;
    const navbar = document.getElementById('navbar');

    window.addEventListener('scroll', () => {
        const currentScrollY = window.scrollY;

        if (currentScrollY > lastScrollY && currentScrollY > 50) {
            // Scrolling down - hide the navbar
            navbar.style.transform = 'translateY(-100%)';
        } else if (currentScrollY < lastScrollY) {
            // Scrolling up - show the navbar
            navbar.style.transform = 'translateY(0)';
        }

        lastScrollY = currentScrollY;

        // Add/remove background and shadow based on scroll position
        if (currentScrollY > 50) {
            navbar.classList.add('bg-grey', 'shadow-md');
            navbar.classList.remove('bg-transparent');
        } else {
            navbar.classList.remove('bg-grey', 'shadow-md');
            navbar.classList.add('bg-transparent');
        }
    });

    // Scroll animations (unchanged)
    const elements = document.querySelectorAll('.animate-on-scroll');
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('is-visible');
            }
        });
    }, { threshold: 0.1 });

    elements.forEach(el => observer.observe(el));

    // dropdown
    document.getElementById('profileButton').addEventListener('click', (e) => {
        e.stopPropagation();
        const dropdown = document.getElementById('profileDropdown');
        dropdown.classList.toggle('hidden');
    });

    document.addEventListener('click', (event) => {
        const profileButton = document.getElementById('profileButton');
        const dropdown = document.getElementById('profileDropdown');
        if (!profileButton.contains(event.target) && !dropdown.contains(event.target)) {
            dropdown.classList.add('hidden');
        }
    });

    document.getElementById('logoutButton').addEventListener('click', () => {
        Swal.fire({
            title: 'Are you sure?',
            text: "You will be logged out!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, log me out!'
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire(
                    'Logged Out!',
                    'You have been logged out successfully.',
                    'success'
                ).then(() => {
                    window.location.href = '/logout';
                });
            }
        });
    });

    // Mobile menu toggle
    const mobileMenuButton = document.getElementById('mobileMenuButton');
    const navLinks = document.getElementById('navLinks');
    mobileMenuButton.addEventListener('click', (e) => {
        e.stopPropagation();
        navLinks.classList.toggle('hidden');
    });
    // Hide menu when clicking outside (on mobile)
    document.addEventListener('click', (event) => {
        if (!mobileMenuButton.contains(event.target) && !navLinks.contains(event.target)) {
            if (window.innerWidth < 768) {
                navLinks.classList.add('hidden');
            }
        }
    });
    // Hide menu on resize to desktop
    window.addEventListener('resize', () => {
        if (window.innerWidth >= 768) {
            navLinks.classList.remove('hidden');
        } else {
            navLinks.classList.add('hidden');
        }
    });
</script>