<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Cart - Footwear E-commerce</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<style>
    .loading-spinner {
        display: inline-block;
        width: 16px;
        height: 16px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        border-top-color: white;
        animation: spin 1s ease-in-out infinite;
    }

    @keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }

    .toast-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 9999;
    }

    .toast {
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        padding: 16px 20px;
        margin-bottom: 10px;
        border-left: 4px solid #3b82f6;
        animation: slideIn 0.3s ease;
        min-width: 300px;
    }

    .toast.success {
        border-left-color: #10b981;
    }

    .toast.error {
        border-left-color: #ef4444;
    }

    @keyframes slideIn {
        from {
            transform: translateX(100%);
            opacity: 0;
        }

        to {
            transform: translateX(0);
            opacity: 1;
        }
    }
</style>

<%- include('../partials/user/header.ejs') %>
    <%- include('../partials/user/loader.ejs') %>

        <body class="bg-gray-100">
            <div class="container mx-auto px-4 py-36">
                <h1 class="text-3xl font-bold mb-8">Your Cart</h1>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                    <div class="md:col-span-2">
                        <div class="bg-white rounded-lg shadow-md p-6">
                            <h2 class="text-xl font-semibold mb-4">Cart Items</h2>
                            <% if (cart.length> 0) { %>
                                <% cart.forEach(function(item) { %>
                                    <div id="cart-item-<%= item.productId._id %>"
                                        class="flex items-center border-b border-gray-200 py-4">
                                        <img src="<%= item.productId.productImage && item.productId.productImage.length > 0 
                                    ? item.productId.productImage[0] 
                                    : '/default-product-image.jpg' %>" alt="<%= item.productId.productName %>"
                                            class="w-24 h-24 object-cover rounded-md mr-4">
                                        <div class="flex-grow">
                                            <h3 class="font-semibold">
                                                <%= item.productId.productName %>
                                            </h3>
                                            <p class="text-sm text-gray-500">
                                                <% if (item.productId.salePrice < item.productId.regularPrice) { %>
                                                    ₹<%= item.productId.salePrice.toFixed(2) %> (Sale)
                                                        <% } else { %>
                                                            ₹<%= item.productId && item.productId.regularPrice ?
                                                                item.productId.regularPrice.toFixed(2) : '0.00' %>
                                                                <% } %>
                                            </p>
                                        </div>
                                        <div class="flex items-center space-x-2">
                                            <button class="bg-gray-200 px-2 py-1 rounded-md"
                                                onclick="updateQuantity('<%= item.productId._id %>', -1, )">
                                                <%= item.quantity===0 ? 'disabled' : '' %>
                                                    -
                                            </button>
                                            <span class="font-semibold" id="quantity-<%= item.productId._id %>">
                                                <%= item.quantity %>
                                            </span>
                                            <button class="bg-gray-200 px-2 py-1 rounded-md"
                                                onclick="updateQuantity('<%= item.productId._id %>', 1, )">
                                                <%= item.quantity===0 ? 'disabled' : '' %>
                                                    +
                                            </button>
                                        </div>
                                        <button class="ml-4 text-red-500"
                                            onclick="confirmRemoveItem('<%= item.productId._id %>')">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none"
                                                viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                    d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                            </svg>
                                        </button>
                                    </div>
                                    <% }); %>
                                        <% } else { %>
                                            <p class="text-gray-500">Your cart is empty!</p>
                                            <% } %>
                        </div>
                    </div>
                    <div id="cart-summery">
                        <div class="bg-white rounded-lg shadow-md p-6">
                            <h2 class="text-xl font-semibold mb-4">Order Summary</h2>
                            <div class="space-y-2">
                                <div class="flex justify-between">
                                    <span>Subtotal</span>
                                    <span id="cart-subtotal">₹<%= subtotal.toFixed(2) %></span>
                                </div>
                                <div class="border-t border-gray-200 my-2"></div>
                                <div class="flex justify-between font-bold">
                                    <span>Total</span>
                                    <span id="cart-total">₹<%= total.toFixed(2) %></span>
                                </div>
                            </div>
                            <a href="/checkout"
                                class="w-full bg-blue-600 text-white py-2 px-4 rounded-md mt-4 hover:bg-blue-700 transition duration-300 text-center inline-block">
                                Proceed to Checkout
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <%- include('../partials/user/footer.ejs') %>

                <script>
                    let isUpdating = false;

                    function showToast(message, type = 'info') {
                        const toast = $(`
                            <div class="toast ${type}">
                                <div class="flex items-center">
                                    <svg class="w-5 h-5 mr-3 ${type === 'success' ? 'text-green-600' : type === 'error' ? 'text-red-600' : 'text-blue-600'}" fill="currentColor" viewBox="0 0 20 20">
                                        ${type === 'success' ?
                                '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>' :
                                type === 'error' ?
                                    '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>' :
                                    '<path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>'
                            }
                                    </svg>
                                    <span class="text-gray-800">${message}</span>
                                </div>
                            </div>
                        `);

                        $('body').append(toast);

                        setTimeout(() => {
                            toast.fadeOut(300, function () {
                                $(this).remove();
                            });
                        }, 3000);
                    }

                    function updateQuantity(itemId, change, buttonElement, quantity) {
                        if (isUpdating) return;
                        isUpdating = true;

                        const quantityElement = $(`#quantity-${itemId}`);
                        const currentQuantity = parseInt(quantityElement.text());
                        const newQuantity = currentQuantity + change;

                        if (newQuantity < 1) {
                            showToast('Quantity cannot be less than 1.', 'error');
                            isUpdating = false;
                            return;
                        }
                        if (newQuantity > 5) {
                            showToast('Quantity cannot be more than 5.', 'error');
                            isUpdating = false;
                            return;
                        }

                        // Show loading state
                        const button = $(buttonElement);
                        const originalText = button.html();
                        button.prop('disabled', true).html('<span class="loading-spinner"></span>');

                        $.ajax({
                            url: `/api/cart/update/${itemId}`,
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({ change: change }),
                            success: function (data) {
                                if (data.success) {
                                    $("#cart-summery").load("/cart #cart-summery");
                                    quantityElement.text(data.quantity);
                                    const totalPriceElement = $(`#total-price-${itemId}`);
                                    if (totalPriceElement.length) {
                                        totalPriceElement.text(data.totalprice.toFixed(2));
                                    }
                                    showToast('Quantity updated successfully!', 'success');
                                } else {
                                    showToast('Failed to update quantity: ' + data.message, 'error');
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error('Error:', error, 'Status:', status, 'Response:', xhr.responseText);
                                showToast('An error occurred while updating the quantity.', 'error');
                            },
                            complete: function () {
                                button.prop('disabled', false).html(originalText);
                                isUpdating = false;
                            }
                        });
                    }

                    function removeItem(itemId) {
                        const itemElement = document.getElementById(`cart-item-${itemId}`);

                        // Show loading state
                        if (itemElement) {
                            itemElement.style.opacity = '0.5';
                            itemElement.style.pointerEvents = 'none';
                        }

                        fetch(`/cart/delete/${itemId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    showToast('Item removed from cart successfully!', 'success');

                                    // Animate removal
                                    if (itemElement) {
                                        itemElement.style.transition = 'all 0.3s ease';
                                        itemElement.style.transform = 'translateX(-100%)';
                                        itemElement.style.opacity = '0';

                                        setTimeout(() => {
                                            itemElement.remove();
                                        }, 300);
                                    }

                                    // Update totals
                                    document.getElementById('cart-total').textContent = `₹${data.newTotal.toFixed(2)}`;
                                    document.getElementById('cart-subtotal').textContent = `₹${data.newSubtotal.toFixed(2)}`;
                                } else {
                                    showToast('Failed to remove item: ' + data.message, 'error');

                                    // Reset loading state
                                    if (itemElement) {
                                        itemElement.style.opacity = '1';
                                        itemElement.style.pointerEvents = 'auto';
                                    }
                                }
                            })
                            .catch(error => {
                                console.error("Error:", error);
                                showToast("An error occurred while removing the item.", 'error');

                                // Reset loading state
                                if (itemElement) {
                                    itemElement.style.opacity = '1';
                                    itemElement.style.pointerEvents = 'auto';
                                }
                            });
                    }

                    function confirmRemoveItem(itemId) {
                        Swal.fire({
                            title: 'Are you sure?',
                            text: 'Want to remove this item from the cart?',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes!',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                removeItem(itemId);
                            }
                        })
                    }
                    document.querySelector('.w-full.bg-blue-600').addEventListener('click', function (event) {
                        const cartItems = document.querySelectorAll('[id^="cart-item-"]');
                        if (cartItems.length === 0) {
                            event.preventDefault();
                            Swal.fire({
                                icon: 'info',
                                title: 'Your cart is empty!',
                                text: 'Please add products to your cart before proceeding to checkout.',
                                timer: 2000,
                                showConfirmButton: false,
                            });
                        }
                    });
                </script>
        </body>

</html>