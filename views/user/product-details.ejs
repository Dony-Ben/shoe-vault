<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= productData.productName %> - Product Detail
  </title>
  <link rel="stylesheet" type="text/css" href="bootstrap.min.css">
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="responsive.css">
  <link rel="stylesheet" href="jquery.mCustomScrollbar.min.css">
  <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/font-awesome.css">
  <link rel="stylesheet" href="owl.carousel.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancybox/2.1.5/jquery.fancybox.min.css"
    media="screen">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <style>
    .product-image-slider img {
      width: 100%;
      height: 400px;
      object-fit: cover;
      border-radius: 10px;

    }

    .slider-nav-thumbnails img {
      width: 80px;
      height: 80px;
      object-fit: cover;
      border-radius: 5px;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .slider-nav-thumbnails img:hover {
      transform: scale(1.1);
    }

    .related-products .card {
      transition: all 0.3s ease;
    }

    .related-products .card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }

    /*  */
    .image-zoom-container {
      position: relative;
      width: 100%;
      height: 400px;
      overflow: hidden;
    }

    #mainImage {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 10px;
    }

    #zoomLens {
      position: absolute;
      border: 2px solid #ccc;
      width: 100px;
      height: 100px;
      background: rgba(255, 255, 255, 0.4);
      pointer-events: none;
      display: none;
    }

    .product-image-slider {
      position: relative;
      cursor: crosshair;
    }

    .size-options {
      display: flex;
      gap: 10px;
    }

    .size-btn {
      padding: 10px 15px;
      border: 1px solid #000;
      background-color: white;
      cursor: pointer;
      transition: 0.3s;
    }

    .size-btn:hover {
      background-color: #000;
      color: white;
    }

    .size-btn {
      padding: 10px 15px;
      border: 1px solid #000;
      background-color: white;
      cursor: pointer;
      transition: 0.3s;
    }

    .size-btn.selected {
      background-color: black;
      color: white;
    }
  </style>
</head>

<body class="bg-gray-50 min-h-screen">
  <div class="fixed top-0 left-0 w-full z-50 bg-white shadow-md">
    <%- include('../partials/user/header.ejs') %>
  </div>
  <main class="main pt-24 pb-10">
    <!-- Breadcrumbs -->
    <div class="container mx-auto px-4 mb-6">
      <nav class="text-sm" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-2 text-gray-500">
          <li>
            <a href="/home" class="hover:underline text-gray-600">Home</a>
            <span class="mx-1">/</span>
          </li>
          <li>
            <a href="/shop" class="hover:underline text-gray-600">Shop</a>
            <span class="mx-1">/</span>
          </li>
          <li class="text-gray-800 font-medium truncate max-w-xs" title="<%= productData.productName %>">
            <%= productData.productName %>
          </li>
        </ol>
      </nav>
    </div>
    <div class="container mx-auto px-4">
      <div class="flex flex-col lg:flex-row gap-10">
        <!-- Left: Image Gallery -->
        <div class="flex flex-col lg:flex-row gap-6 w-full lg:w-1/2">
          <!-- Thumbnails -->
          <div class="flex lg:flex-col gap-3 order-2 lg:order-1">
            <% productData.productImage.forEach((image, index) => { %>
              <img src="<%= image %>" alt="Thumbnail <%= index + 1 %>"
                class="w-16 h-16 object-cover rounded border cursor-pointer hover:ring-2 hover:ring-black transition"
                onclick="changeMainImage('<%= image %>')">
            <% }); %>
          </div>
          <!-- Main Image -->
          <div class="flex-1 order-1 lg:order-2 flex items-center justify-center">
            <img id="mainImage" src="<%= productData.productImage[0] %>"
              alt="<%= productData.productName %> - Main Image"
              class="w-full max-w-md h-[400px] object-cover rounded-lg shadow border bg-white">
          </div>
        </div>
        <!-- Right: Product Info & Actions -->
        <div class="w-full lg:w-1/2 flex flex-col gap-6">
          <div>
            <h1 class="text-2xl md:text-3xl font-bold text-gray-900 mb-2"><%= productData.productName %></h1>
            <% if (productData.brands && productData.brands.brandName) { %>
              <div class="text-sm text-gray-500 mb-1">Brand: <span class="font-medium text-gray-700"><%= productData.brands.brandName %></span></div>
            <% } %>
            <div class="flex items-center gap-2 mb-2">
              <% for (let i=0; i < 5; i++) { %>
                <svg class="w-5 h-5 <%= i < productData.rating ? 'text-yellow-400' : 'text-gray-300' %>" fill="currentColor" viewBox="0 0 20 20"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.967a1 1 0 00.95.69h4.175c.969 0 1.371 1.24.588 1.81l-3.38 2.455a1 1 0 00-.364 1.118l1.287 3.966c.3.922-.755 1.688-1.54 1.118l-3.38-2.455a1 1 0 00-1.175 0l-3.38 2.455c-.784.57-1.838-.196-1.54-1.118l1.287-3.966a1 1 0 00-.364-1.118L2.05 9.394c-.783-.57-.38-1.81.588-1.81h4.175a1 1 0 00.95-.69l1.286-3.967z"/></svg>
              <% } %>
              <span class="text-xs text-gray-500">(25 reviews)</span>
            </div>
          </div>
          <div class="bg-white rounded-lg shadow p-6 border border-gray-100 flex flex-col gap-4">
            <div class="flex items-center gap-4">
              <span class="text-2xl font-bold text-green-700">₹<%= productData.salePrice.toFixed(2) %></span>
              <% if (productData.regularPrice && productData.salePrice < productData.regularPrice) { %>
                <span class="text-base text-gray-400 line-through">₹<%= productData.regularPrice.toFixed(2) %></span>
              <% } %>
            </div>
            <div class="flex items-center gap-2">
              <span class="text-sm font-medium <%= productData.quantity > 0 ? 'text-green-600' : 'text-red-500' %>">
                <%= productData.quantity > 0 ? 'In Stock' : 'Out of Stock' %>
              </span>
              <span class="text-xs text-gray-400">| Stock: <%= productData.quantity %></span>
            </div>
            <!-- Size Selection -->
            <div>
              <h3 class="text-base font-semibold mb-2">Select Size</h3>
              <div class="flex flex-wrap gap-2">
                <% if (productData && productData.sizes && productData.sizes.length > 0) { %>
                  <% productData.sizes.forEach((item) => { %>
                    <button
                      type="button"
                      class="size-btn px-4 py-2 rounded-full border-2 border-gray-300 text-gray-700 font-medium transition
                             hover:bg-black hover:text-white focus:outline-none"
                      onclick="selectSize('<%= item %>')"
                      id="size-<%= item %>"
                    >
                      <%= item %>
                    </button>
                  <% }); %>
                <% } else { %>
                  <span class="text-gray-400">No sizes available.</span>
                <% } %>
              </div>
              <input type="hidden" id="selectedSize" name="selectedSize">
            </div>
            <!-- Action Buttons -->
            <div class="flex flex-row gap-2 mt-4 items-center">
              <% if(productData.quantity>0) { %>
                <button
                  onclick="addToCart(event, '<%= productData._id %>')"
                  class="bg-gradient-to-r from-yellow-400 to-yellow-500 text-black py-2 px-6 rounded-md font-semibold text-base shadow hover:from-yellow-500 hover:to-yellow-400 transition"
                >
                  Add to Cart
                </button>
                <button type="button" id="wishlist-btn" class="wishlist-btn <%= isWishlisted ? 'active' : '' %> ml-2 flex items-center justify-center border-2 border-gray-300 rounded-md p-2 transition hover:bg-rose-100" onclick="toggleWishlistDetail('<%= productData._id %>', event)">
                  <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" stroke-width="2" stroke="#000000" width="28" height="28">
                    <path d="M9.06,25C7.68,17.3,12.78,10.63,20.73,10c7-.55,10.47,7.93,11.17,9.55a.13.13,0,0,0,.25,0c3.25-8.91,9.17-9.29,11.25-9.5C49,9.45,56.51,13.78,55,23.87c-2.16,14-23.12,29.81-23.12,29.81S11.79,40.05,9.06,25Z"></path>
                  </svg>
                </button>
              <%}else{%>
                <span class="out-of-stock-msg text-red-500 font-semibold">Out of Stock</span>
              <% } %>
            </div>
          </div>
        </div>
      </div>
      <!-- Description/Features Below -->
      <div class="mt-12 w-full">
        <div class="bg-white rounded-lg shadow p-10 border border-gray-100 max-w-6xl mx-auto">
          <h2 class="text-xl font-semibold mb-4 border-b pb-2">Product Description</h2>
          <p class="text-gray-700 leading-relaxed text-base">
            <%= productData.description %>
          </p>
          <!-- You can add more feature sections here if needed -->
        </div>
      </div>
    </div>
  </main>
  <%- include('../partials/user/footer.ejs') %>
</body>
<script>
  // Image zoom functionality
  const mainImage = document.getElementById('mainImage');
  let zoomLens;
  function createZoomLens() {
    zoomLens = document.createElement('div');
    zoomLens.style.position = 'absolute';
    zoomLens.style.border = '2px solid #ccc';
    zoomLens.style.width = '120px';
    zoomLens.style.height = '120px';
    zoomLens.style.background = 'rgba(255,255,255,0.4)';
    zoomLens.style.pointerEvents = 'none';
    zoomLens.style.display = 'none';
    zoomLens.style.zIndex = '10';
    zoomLens.id = 'zoomLens';
    mainImage.parentElement.style.position = 'relative';
    mainImage.parentElement.appendChild(zoomLens);
  }
  createZoomLens();

  mainImage.parentElement.addEventListener('mousemove', function(e) {
    const rect = mainImage.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    const lensWidth = zoomLens.offsetWidth / 2;
    const lensHeight = zoomLens.offsetHeight / 2;
    let lensX = x - lensWidth;
    let lensY = y - lensHeight;
    lensX = Math.max(0, Math.min(lensX, rect.width - zoomLens.offsetWidth));
    lensY = Math.max(0, Math.min(lensY, rect.height - zoomLens.offsetHeight));
    zoomLens.style.left = lensX + 'px';
    zoomLens.style.top = lensY + 'px';
    zoomLens.style.display = 'block';
    zoomLens.style.backgroundPosition = `-${lensX * 2}px -${lensY * 2}px`;
    zoomLens.style.backgroundImage = `url(${mainImage.src})`;
    zoomLens.style.backgroundSize = `${rect.width * 2}px ${rect.height * 2}px`;
  });
  mainImage.parentElement.addEventListener('mouseleave', function() {
    zoomLens.style.display = 'none';
  });
  function changeMainImage(imageSrc) {
    mainImage.src = `${imageSrc}`;
    zoomLens.style.backgroundImage = `url(${imageSrc})`;
  }
  function selectSize(size) {
    document.querySelectorAll('.size-btn').forEach(btn => btn.classList.remove('bg-black', 'text-white', 'border-black'));
    const btn = document.getElementById('size-' + size);
    if (btn) {
      btn.classList.add('bg-black', 'text-white', 'border-black');
    }
    document.getElementById('selectedSize').value = size;
  }
  function toggleWishlistDetail(productId, event) {
    event.preventDefault();
    event.stopPropagation();
    $.ajax({
      url: `/wishlist-add`,
      method: 'POST',
      data: { productId },
      success: function (response) {
        const wishlistBtn = $('#wishlist-btn');
        const heartIcon = wishlistBtn.find('svg path');
        if (response.success) {
          const added = response.added;
          heartIcon.css('fill', added ? 'red' : '');
          wishlistBtn.toggleClass('active', added);
          Swal.fire(added ? 'Added to wishlist' : 'Removed from wishlist', '', added ? 'success' : 'info');
        } else {
          Swal.fire('Failed to update wishlist.', '', 'error');
        }
      },
      error: function () {
        Swal.fire('An error occurred. Please try again.', '', 'error');
      }
    });
  }
</script>
</html>